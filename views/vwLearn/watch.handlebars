<div class="container-fluid p-0">
    <div class="row g-0">
        <!-- Video Player Section -->
        <div class="col-lg-12">
            <div class="video-container bg-dark position-relative">
                {{#if currentLesson.video_url}}

                {{#if (isYouTube currentLesson.video_url)}}
                <!-- YouTube iframe -->
                <div class="ratio ratio-16x9" style="min-height: 450px;">
                    <iframe id="youtubePlayer" src="{{getYouTubeEmbedUrl currentLesson.video_url}}"
                        title="{{currentLesson.title}}" frameborder="0"
                        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
                        allowfullscreen></iframe>
                </div>
                {{else}}
                <!-- Regular video file -->
                <video id="mainVideo" class="w-100"
                    style="max-height: 720px; min-height: 450px; width: 100%; object-fit: contain;">
                    <source src="{{currentLesson.video_url}}" type="video/mp4">
                    Your browser does not support the video tag.
                </video>

                <!-- Custom Video Controls -->
                <div class="position-absolute bottom-0 start-0 end-0 bg-dark bg-opacity-75 p-3" id="videoControls">
                    <div class="mb-2">
                        <input type="range" class="form-range" id="progressBar" min="0" max="100" value="0" step="0.1">
                    </div>

                    <div class="d-flex justify-content-between align-items-center text-white">
                        <div class="d-flex align-items-center gap-2">
                            <button class="btn btn-link text-white p-0" id="playPauseBtn">
                                <i class="bi bi-play-fill fs-4" id="playIcon"></i>
                            </button>
                            <small id="timeDisplay">0:00 / 0:00</small>

                            <div class="d-flex align-items-center gap-2 ms-3">
                                <i class="bi bi-volume-up-fill" id="volumeIcon"></i>
                                <input type="range" class="form-range" id="volumeBar" min="0" max="100" value="100"
                                    style="width: 80px;">
                            </div>
                        </div>
                        <button class="btn btn-link text-white p-0" id="fullscreenBtn">
                            <i class="bi bi-fullscreen fs-5"></i>
                        </button>
                    </div>
                </div>
                {{/if}}

                {{else}}
                <div class="d-flex align-items-center justify-content-center text-white" style="height: 500px;">
                    <div class="text-center">
                        <i class="bi bi-camera-video display-1 mb-3"></i>
                        <h4>No video available</h4>
                    </div>
                </div>
                {{/if}}
            </div>

            <!-- Lesson Info -->
            <div class="p-4 bg-white">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <h5 class="mb-1">{{currentLesson.title}}</h5>
                        <small class="text-muted">{{course.title}}</small>
                    </div>
                    <div class="d-flex justify-content-between align-items-center gap-3">
                        <a href="{{#if prevLesson}}/learn/{{course.course_id}}/lesson/{{prevLesson.lesson_id}}{{else}}#{{/if}}"
                            class="btn btn-outline-primary btn-nav w-50 {{#unless prevLesson}}disabled{{/unless}}">
                            <i class="bi bi-skip-backward"></i> Previous
                        </a>

                        <a href="{{#if nextLesson}}/learn/{{course.course_id}}/lesson/{{nextLesson.lesson_id}}{{else}}#{{/if}}"
                            class="btn btn-primary btn-nav w-50 {{#unless nextLesson}}disabled{{/unless}}"
                            id="nextLessonBtn">
                            Next <i class="bi bi-skip-forward"></i>
                        </a>
                    </div>
                </div>

                <hr>

                <div>
                    <p class="text-muted">{{currentLesson.description}}</p>

                    {{#if currentLesson.content}}
                    <div class="mt-4">
                        <h5>Lesson Materials</h5>
                        <div class="border rounded p-3 bg-light">
                            {{{currentLesson.content}}}
                        </div>
                    </div>
                    {{/if}}

                    <div class="mt-4">
                        <button class="btn btn-success btn-sm w-100" id="markCompleteBtn" {{#if currentLesson.is_completed}}disabled{{/if}}>
                            {{#if currentLesson.is_completed}}
                            <i class="bi bi-check-circle"></i> Completed
                            {{else}}
                            <i class="bi bi-check"></i> Mark as Complete
                            {{/if}}
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const video = document.getElementById('mainVideo');
        const youtubePlayer = document.getElementById('youtubePlayer');
        const markCompleteBtn = document.getElementById('markCompleteBtn');

        if (youtubePlayer) {
            console.log('YouTube video detected');

            if (markCompleteBtn) {
                markCompleteBtn.addEventListener('click', async function () {
                    try {
                        const response = await fetch('/learn/mark-complete', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                courseId: "{{ course.course_id }}",
                                lessonId: "{{ currentLesson.lesson_id }}"
                            })
                        });

                        const result = await response.json();
                        if (result.success) {
                            this.innerHTML = '<i class="bi bi-check-circle"></i> Completed';
                            this.disabled = true;

                            // Hiển thị thông báo thành công
                            const alert = document.createElement('div');
                            alert.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                            alert.style.zIndex = '9999';
                            alert.innerHTML = `
                                <i class="bi bi-check-circle"></i> Lesson completed!
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            `;
                            document.body.appendChild(alert);
                            setTimeout(() => alert.remove(), 3000);

                            {{#if nextLesson}}
                            const nextBtn = document.getElementById('nextLessonBtn');
                            if (nextBtn) {
                                nextBtn.classList.add('btn-success');
                                nextBtn.classList.remove('btn-primary');
                                
                            }
                            {{/if}}
                        }
                    } catch (error) {
                        console.error('Error marking lesson complete:', error);
                    }
                });
            }

            return;
        }
        if (!video) return;

        const playPauseBtn = document.getElementById('playPauseBtn');
        const playIcon = document.getElementById('playIcon');
        const progressBar = document.getElementById('progressBar');
        const volumeBar = document.getElementById('volumeBar');
        const volumeIcon = document.getElementById('volumeIcon');
        const timeDisplay = document.getElementById('timeDisplay');
        const fullscreenBtn = document.getElementById('fullscreenBtn');
        const videoControls = document.getElementById('videoControls');

        // Format time helper
        function formatTime(seconds) {
            const mins = Math.floor(seconds / 60);
            const secs = Math.floor(seconds % 60);
            return `${mins}:${secs.toString().padStart(2, '0')}`;
        }

        // Play/Pause
        playPauseBtn.addEventListener('click', () => {
            if (video.paused) {
                video.play();
                playIcon.className = 'bi bi-pause-fill fs-4';
            } else {
                video.pause();
                playIcon.className = 'bi bi-play-fill fs-4';
            }
        });

        video.addEventListener('click', () => playPauseBtn.click());

        video.addEventListener('timeupdate', () => {
            const progress = (video.currentTime / video.duration) * 100;
            progressBar.value = progress;
            timeDisplay.textContent = `${formatTime(video.currentTime)} / ${formatTime(video.duration)}`;

            if (progress > 80 && !markCompleteBtn.disabled) {
                markCompleteBtn.classList.add('btn-success');
                markCompleteBtn.classList.remove('btn-outline-success');
            }
        });

        progressBar.addEventListener('input', (e) => {
            const time = (e.target.value / 100) * video.duration;
            video.currentTime = time;
        });

        volumeBar.addEventListener('input', (e) => {
            video.volume = e.target.value / 100;
            if (e.target.value == 0) {
                volumeIcon.className = 'bi bi-volume-mute-fill';
            } else if (e.target.value < 50) {
                volumeIcon.className = 'bi bi-volume-down-fill';
            } else {
                volumeIcon.className = 'bi bi-volume-up-fill';
            }
        });

        fullscreenBtn.addEventListener('click', () => {
            if (video.requestFullscreen) {
                video.requestFullscreen();
            } else if (video.webkitRequestFullscreen) {
                video.webkitRequestFullscreen();
            }
        });

        let controlsTimeout;
        const videoContainer = document.querySelector('.video-container');

        videoContainer.addEventListener('mousemove', () => {
            videoControls.style.opacity = '1';
            clearTimeout(controlsTimeout);
            controlsTimeout = setTimeout(() => {
                if (!video.paused) {
                    videoControls.style.opacity = '0.3';
                }
            }, 3000);
        });

        // Nút mark complete cho regular video
        if (markCompleteBtn) {
            markCompleteBtn.addEventListener('click', async function () {
                try {
                    const response = await fetch('/learn/mark-complete', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            courseId: "{{ course.course_id }}",
                            lessonId: "{{ currentLesson.lesson_id }}"
                        })
                    });

                    const result = await response.json();
                    if (result.success) {
                        this.innerHTML = '<i class="bi bi-check-circle"></i> Completed';
                        this.disabled = true;

                        const alert = document.createElement('div');
                        alert.className = 'alert alert-success alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3';
                        alert.style.zIndex = '9999';
                        alert.innerHTML = `
                            <i class="bi bi-check-circle"></i> Lesson completed!
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.body.appendChild(alert);
                        setTimeout(() => alert.remove(), 3000);

                        {{#if nextLesson}}
                        const nextBtn = document.getElementById('nextLessonBtn');
                        if (nextBtn) {
                            nextBtn.classList.add('btn-success');
                            nextBtn.classList.remove('btn-primary');
                            nextBtn.innerHTML = 'Continue to Next <i class="bi bi-arrow-right"></i>';
                        }
                        {{/if}}
                    }
                } catch (error) {
                    console.error('Error marking lesson complete:', error);
                }
            });
        }

        // Gửi progress định kỳ mỗi 30s
        setInterval(() => {
            if (!video.paused) {
                fetch('/learn/progress', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        courseId: "{{ course.course_id }}",
                        lessonId: "{{ currentLesson.lesson_id }}",
                        watchTime: Math.floor(video.currentTime)
                    })
                }).catch(err => console.error('Error saving progress:', err));
            }
        }, 30000);

        // Keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA') return;

            switch (e.key) {
                case ' ':
                    e.preventDefault();
                    playPauseBtn.click();
                    break;
                case 'ArrowLeft':
                    video.currentTime -= 5;
                    break;
                case 'ArrowRight':
                    video.currentTime += 5;
                    break;
                case 'ArrowUp':
                    e.preventDefault();
                    video.volume = Math.min(1, video.volume + 0.1);
                    volumeBar.value = video.volume * 100;
                    break;
                case 'ArrowDown':
                    e.preventDefault();
                    video.volume = Math.max(0, video.volume - 0.1);
                    volumeBar.value = video.volume * 100;
                    break;
                case 'f':
                    fullscreenBtn.click();
                    break;
            }
        });
    });
</script>


<style>
    .video-container {
        position: relative;
        background: #000;
    }

    #videoControls {
        transition: opacity 0.3s;
    }

    .form-range::-webkit-slider-thumb,
    .form-range::-moz-range-thumb {
        background: #fff;
    }

    .btn-nav {
        height: 38px;
        font-weight: 500;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .btn-nav i {
        margin: 0 5px;
    }
</style>